name: Build and push to GCP

on:
  push:
    branches:
      - development
      - staging
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:dind

    env:
      GIT_SUBMODULE_STRATEGY: recursive
      FF_NETWORK_PER_BUILD: 1
      DOCKER_DRIVER: overlay2
      DOCKER_HOST: tcp://docker:2375
      ROLLOUT_RESOURCE_TYPE: deployment
      DOCKER_TLS_CERTDIR: ""

    steps:
      # Set the ENV_FILE_NAME variable based on the branch name.
      - name: Set ENV_FILE_NAME
        run: |
          if [[ "$GITHUB_REF_NAME" == "development" ]]; then
            echo "::set-output name=ENV_FILE_NAME::generate-env-dev.sh"
          else
            echo "::set-output name=ENV_FILE_NAME::generate-env-production.sh"
          fi

      # Cache the node_modules directory to speed up builds.
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('.npmrc', 'package.json') }}
          path: node_modules

      # Log in to the Docker registry.
      - name: Log in to Docker registry
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} ${{ secrets.DOCKER_REGISTRY }}

      # Generate the environment file.
      - name: Generate environment file
        run: sh ${{ steps.set_env_file_name.outputs.ENV_FILE_NAME }}

      # Log the environment variables.
      - name: Log environment variables
        run: cat .env

      # Build the Docker image.
      - name: Build Docker image
        run: docker build -t $GITHUB_SHA .

      # Tag the Docker image.
      - name: Tag Docker image
        run: docker tag $GITHUB_SHA asia-south1-docker.pkg.dev/$GITHUB_REPOSITORY/$GITHUB_REPOSITORY:$GITHUB_SHA

      # Push the Docker image to GCP.
      - name: Push Docker image to GCP
        run: docker push asia-south1-docker.pkg.dev/$GITHUB_REPOSITORY/$GITHUB_REPOSITORY:$GITHUB_SHA
